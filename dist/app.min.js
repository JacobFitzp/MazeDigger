(()=>{"use strict";class t{height=20;width=20;tilemap=[];initTilemap(t,e){this.height=t,this.width=e;for(let t=0;t<this.height;t++){let e=[];for(let t=0;t<this.width;t++)e[t]=!1;this.tilemap[t]=e}}getState(t,e){return t>=this.height||e>=this.width||t<0||e<0||this.tilemap[t][e]}pushState(t,e,h){this.tilemap[t][e]=h}exportTilemap(){return this.tilemap}}class e{maze;height;width;paths=[[0,0]];pos=[0,0];constructor(e,h){this.maze=new t,this.maze.initTilemap(e,h),this.height=e,this.width=h,this.maze.pushState(this.pos[0],this.pos[1],!0)}setStartingPos(t,e){this.pos=[t,e],this.paths=[this.pos]}getPath(t){let e=this.pos[0],h=this.pos[1];switch(t){case 1:return[[e-1,h],[e-2,h]];case 2:return[[e,h+1],[e,h+2]];case 3:return[[e+1,h],[e+2,h]];case 4:return[[e,h-1],[e,h-2]]}}isPathClear(t){let e=this.getPath(t);return!this.maze.getState(e[0][0],e[0][1])&&!this.maze.getState(e[1][0],e[1][1])}digPath(t){let e=this.getPath(t);this.maze.pushState(e[0][0],e[0][1],!0),this.maze.pushState(e[1][0],e[1][1],!0),this.addPath(e[1][0],e[1][1])}hasPaths(){return this.paths.length>0}getClearPaths(){let t=[];for(let e=1;e<=4;e++)this.isPathClear(e)&&t.push(e);return t}removePath(){this.paths=this.paths.filter((t=>t!==this.pos))}addPath(t,e){this.pos=[t,e],this.paths.push([t,e])}switchPath(){this.pos=this.getRandomElementFromArray(this.paths)}getRandomElementFromArray(t){return t[Math.floor(Math.random()*t.length)]}generate(){for(;this.hasPaths();){let t=this.getClearPaths();t.length?this.digPath(this.getRandomElementFromArray(t)):(this.removePath(),this.hasPaths()&&this.switchPath())}return this.maze}}class h{renderToCanvas(t,e){let h=e.exportTilemap(),s=0,i=0,a=Math.ceil(t.height/e.height),r=t.getContext("2d");r.fillStyle="red",r.fillRect(0,0,t.width,t.height),r.fillStyle="black",h.forEach((function(t){i=0,t.forEach((function(t){t&&r.fillRect(i,s,2*a,a),i+=2*a})),s+=a}))}}$((()=>{$("#maze-generate").click((function(){let t=$("#maze-size").val(),s=new e(t,t);(new h).renderToCanvas($("#maze-canvas")[0],s.generate())}))}))})();